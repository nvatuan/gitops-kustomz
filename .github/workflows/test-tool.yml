name: Test gitops-kustomz

on:
  pull_request:
    paths:
      - 'src/**'
      - 'sample/**'
      - 'test/**'
      - '.github/workflows/test-tool.yml'

permissions:
  contents: read
  pull-requests: write

env:
  GO_VERSION: '1.22'
  KUSTOMIZE_VERSION: '5.3.0'
  CONFTEST_VERSION: '0.63.0'

jobs:
  test-local-mode:
    name: Test Local Mode
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin/kustomize
            /usr/local/bin/conftest
          key: tools-${{ runner.os }}-kustomize-${{ env.KUSTOMIZE_VERSION }}-conftest-${{ env.CONFTEST_VERSION }}

      - name: Install kustomize
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -sL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${{ env.KUSTOMIZE_VERSION }}/kustomize_v${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz" | tar xz
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Install conftest
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -L -o conftest.tar.gz "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz"
          tar -xzf conftest.tar.gz
          chmod +x conftest
          sudo mv conftest /usr/local/bin/
          conftest --version

      - name: Build tool
        run: make build

      - name: Run local mode test
        run: |
          make run-local

      - name: Verify output
        run: |
          if [ ! -f test/output/my-app-report.md ]; then
            echo "❌ Report file not generated"
            exit 1
          fi
          
          echo "✅ Report generated successfully"
          echo ""
          echo "📄 Report contents:"
          cat test/output/my-app-report.md

      - name: Upload report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: policy-report
          path: test/output/*.md

  test-github-mode:
    name: Test GitHub Mode
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Only need base and head commits

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin/kustomize
            /usr/local/bin/conftest
          key: tools-${{ runner.os }}-kustomize-${{ env.KUSTOMIZE_VERSION }}-conftest-${{ env.CONFTEST_VERSION }}

      - name: Install kustomize
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -sL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${{ env.KUSTOMIZE_VERSION }}/kustomize_v${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz" | tar xz
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Install conftest
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -L -o conftest.tar.gz "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz"
          tar -xzf conftest.tar.gz
          chmod +x conftest
          sudo mv conftest /usr/local/bin/
          conftest --version

      - name: Build tool
        run: make build

      - name: Test on sample data (GitHub mode simulation)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # This will test the GitHub mode but won't actually post comments
          # since sample/k8s-manifests doesn't have the right structure
          echo "GitHub mode test would run here"
          echo "Skipping actual GitHub mode test for now"
          
          # Future: Set up proper test structure and run:
          # bin/gitops-kustomz \
          #   --run-mode github \
          #   --gh-repo ${{ github.repository }} \
          #   --gh-pr-number ${{ github.event.pull_request.number }} \
          #   --service my-app \
          #   --environments stg,prod \
          #   --policies-path sample/policies

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run linter
        run: make lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run tests
        run: make test

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage.txt
          flags: unittests

  sit-test-local:
    name: System Integration Test (Local Mode)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin/kustomize
            /usr/local/bin/conftest
          key: tools-${{ runner.os }}-kustomize-${{ env.KUSTOMIZE_VERSION }}-conftest-${{ env.CONFTEST_VERSION }}

      - name: Install kustomize
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -sL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${{ env.KUSTOMIZE_VERSION }}/kustomize_v${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz" | tar xz
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Install conftest
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -L -o conftest.tar.gz "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz"
          tar -xzf conftest.tar.gz
          chmod +x conftest
          sudo mv conftest /usr/local/bin/
          conftest --version

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run SIT test
        run: make sit-test-local

      - name: Upload test outputs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sit-test-local-output
          path: |
            test/ut_local/output/
          retention-days: 7
