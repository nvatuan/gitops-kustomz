name: GitOps Policy Check (Using Reusable Workflow)

on:
  pull_request:
    paths:
      - 'services/**'
      - 'policies/**'

permissions:
  contents: read
  pull-requests: write

env:
  KUSTOMIZE_VERSION: '5.3.0'
  OPA_VERSION: '0.60.0'
  GITOPS_KUSTOMZ_VERSION: 'v0.0.1'  # Pin to specific release version

jobs:
  detect-changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Only need base and head commits

      - name: Detect changed services
        id: set-services
        run: |
          # Get changed files and extract unique services
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          
          SERVICES=$(echo "$CHANGED_FILES" | \
            grep -E '^services/[^/]+/' | \
            sed -E 's|^services/([^/]+)/.*|\1|' | \
            sort -u | \
            jq -R -s -c 'split("\n") | map(select(length > 0))')
          
          if [ "$SERVICES" == "[]" ]; then
            echo "No service changes detected"
            echo "services=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Detected services: $SERVICES"
          echo "services=$SERVICES" >> $GITHUB_OUTPUT

  # Call the reusable workflow to setup tools
  setup-tools:
    name: Setup GitOps Tools
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    uses: gh-nvat/gitops-kustomz/.github/workflows/setup-tools.yml@main
    with:
      go-version: '1.22'
      kustomize-version: '5.3.0'
      opa-version: '0.60.0'
      gitops-kustomz-version: 'latest'

  policy-check:
    name: Check ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: [detect-changes, setup-tools]
    if: needs.detect-changes.outputs.services != '[]'
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Only need base and head commits

      # Tools are already installed by setup-tools job
      # But we need to install them again in this job since jobs run in separate runners
      # So we still need to install tools here
      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin/kustomize
            /usr/local/bin/opa
            ~/go/bin/gitops-kustomz
          key: tools-${{ runner.os }}-kustomize-5.3.0-opa-0.60.0-gitops-latest

      - name: Install kustomize
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -sL "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.3.0/kustomize_v5.3.0_linux_amd64.tar.gz" | tar xz
          sudo mv kustomize /usr/local/bin/

      - name: Install OPA
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          curl -L -o opa "https://github.com/open-policy-agent/opa/releases/download/v0.60.0/opa_linux_amd64_static"
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: Install gitops-kustomz
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          # Download pre-built binary from GitHub releases
          ARCH=$(uname -m)
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          
          # Map architecture names
          if [ "$ARCH" = "x86_64" ]; then ARCH="amd64"; fi
          if [ "$ARCH" = "aarch64" ]; then ARCH="arm64"; fi
          
          BINARY_NAME="gitops-kustomz-${OS}-${ARCH}"
          DOWNLOAD_URL="https://github.com/nvatuan/gitops-kustomz/releases/download/${{ env.GITOPS_KUSTOMZ_VERSION }}/${BINARY_NAME}"
          
          echo "Downloading ${BINARY_NAME} from ${DOWNLOAD_URL}"
          curl -L "${DOWNLOAD_URL}" -o ~/go/bin/gitops-kustomz
          chmod +x ~/go/bin/gitops-kustomz
          ~/go/bin/gitops-kustomz --version

      - name: Add tools to PATH
        run: |
          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run policy check (all environments)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gitops-kustomz \
            --run-mode github \
            --gh-repo ${{ github.repository }} \
            --gh-pr-number ${{ github.event.pull_request.number }} \
            --service ${{ matrix.service }} \
            --environments sandbox,stg,prod \
            --policies-path ./policies
        continue-on-error: true

      - name: Check result
        if: failure()
        run: |
          echo "::error::Policy check failed for ${{ matrix.service }}"
          exit 1
