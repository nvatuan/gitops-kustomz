apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-app
    environment: stg
    version: v1.0.0
  name: stg-my-app-service
  namespace: my-app-stg
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: my-app
    environment: stg
    version: v1.0.0
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
    environment: stg
    version: v1.0.0
  name: stg-my-app
  namespace: my-app-stg
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
      environment: stg
      version: v1.0.0
  template:
    metadata:
      labels:
        app: my-app
        environment: stg
        version: v1.0.0
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: staging
        - name: LOG_LEVEL
          value: debug
        image: nginx:1.21
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        name: my-app
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: my-app
    environment: stg
    version: v1.0.0
  name: stg-my-app-hpa
  namespace: my-app-stg
spec:
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 60
        type: Percent
        value: 20
      stabilizationWindowSeconds: 180
    scaleUp:
      policies:
      - periodSeconds: 60
        type: Percent
        value: 100
      - periodSeconds: 60
        type: Pods
        value: 1
      selectPolicy: Max
      stabilizationWindowSeconds: 30
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 60
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: stg-my-app
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  labels:
    app: my-app
    environment: stg
    version: v1.0.0
  name: stg-my-app-keda
  namespace: my-app-stg
spec:
  cooldownPeriod: 180
  fallback:
    failureThreshold: 2
    replicas: 1
  idleReplicaCount: 0
  maxReplicaCount: 8
  minReplicaCount: 1
  pollingInterval: 15
  scaleTargetRef:
    name: my-app
  triggers:
  - metadata:
      type: Utilization
      value: "60"
    type: cpu
  - metadata:
      type: Utilization
      value: "70"
    type: memory
  - metadata:
      metricName: http_requests_per_second
      query: sum(rate(http_requests_total{job="my-app",environment="staging"}[2m]))
      serverAddress: http://prometheus-stg.monitoring.svc.cluster.local:9090
      threshold: "5"
    type: prometheus
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    app: my-app
    environment: stg
    version: v1.0.0
  name: stg-my-app-ingress
  namespace: my-app-stg
spec:
  rules:
  - host: my-app-stg.example.com
    http:
      paths:
      - backend:
          service:
            name: stg-my-app-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - my-app-stg.example.com
    secretName: my-app-stg-tls
